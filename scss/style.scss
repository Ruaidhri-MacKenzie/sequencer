@use "colours";
@use "fonts";
@use "components";

// CSS reset defaults
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	height: 100vh;
	display: grid;
	grid-template-rows: auto minmax(0, 1fr) auto;
	font-family: fonts.$body;
}

.app {
	&__header {
		background-color: colours.$brand1;
		background-image: linear-gradient(colours.$brand2, colours.$brand1);
	}

	&__logo {
		padding: 0.5em;
		padding-bottom: 0;
		padding-left: 2em;
	}

	&__main {
		display: grid;
		grid-template-rows: 1fr auto;
	}

	&__footer {
		background-color: colours.$brand1;
	}

	&__copyright {
		font-size: 0.75rem;
		font-family: fonts.$copyright;
		color: colours.$grey-90;
		text-align: right;
		padding: 0.75em;
	}
}

.channel-list {
	overflow-y: scroll;
	background-color: #555;
	display: grid;
	grid-template-columns: auto minmax(0, 1fr);

	&__controls {
		padding-top: 1em;
		padding-left: 1em;
	}

	&__sequences {
		overflow-x: scroll;
		overflow-y: hidden;
		background-color: #555;
		padding-top: 1em;
		padding-right: 1em;
	}
}

.channel {
	margin: 0.5em;
	margin-right: 0;
	padding: 0.5em 1em;
	background-color: colours.$grey-60;
	border-radius: 5px 0 0 5px;
	display: grid;
	grid-template-areas:
		"patch-label	pan-label	level-label	.			."
		"patch				pan				level				solo	mute";
	text-align: center;
	justify-content: center;
	align-items: center;

	&__patch {
		grid-area: patch;
		cursor: pointer;
		width: 10em;
		margin: 0 0.5em;
		padding: 0.25em;

		&-label {
			grid-area: patch-label;
			font-size: 0.75rem;
			align-self: flex-end;
			margin: 0 0.5em;
		}
	}

	&__pan {
		grid-area: pan;
		width: 5em;
		margin: 0 0.5em;
		padding: 0.25em;

		&-label {
			grid-area: pan-label;
			font-size: 0.75rem;
			align-self: flex-end;
			margin: 0 0.5em;
		}
	}

	&__level {
		grid-area: level;
		width: 5em;
		margin: 0 0.5em;
		padding: 0.25em;
		text-align: center;

		&-label {
			grid-area: level-label;
			font-size: 0.75rem;
			margin: 0 0.5em;
			align-self: flex-end;
		}
	}

	&__solo {
		grid-area: solo;
		@include components.channelButton(colours.$highlight-50);
	}

	&__mute {
		grid-area: mute;
		@include components.channelButton(colours.$primary-40);
	}

	&__sequence {
		width: max-content;
		margin: 0.5em;
		margin-left: 0;
		padding: 1.5em 1em;
		background-color: colours.$grey-50;
		border-radius: 0 5px 5px 0;
		display: flex;
		align-items: center;
		counter-reset: bar;
	}
}

.step {
	margin: 0 0.25em;
	font-size: 0.75rem;
	width: 1.25em;
	height: 1.75em;
	background-color: none;
	border: 2px solid red;
	text-align: center;
	border-radius: 0.5em;
	cursor: pointer;

	&--active {
		background-color: red;
		border: 2px solid black;
	}

	&--playing {
		border: 2px solid white;
	}

	&:nth-child(4n - 3) {
		position: relative;
		counter-increment: bar;

		&:after {
			content: counter(bar);
			position: absolute;
			top: -20px;
			left: 0;
			font-size: 0.625rem;
		}
	}

	&:nth-child(4n) {
		margin-right: 2em;
	}
}

.playback {
	background-color: colours.$grey-10;
	padding: 1em;
	display: grid;
	grid-template-areas:
		"play-label		stop-label	tempo-label"
		"play-button	stop-button	tempo-input";
	justify-content: center;

	&__play {
		@include components.playbackButton;
		grid-area: play-button;

		&-label {
			grid-area: play-label;
			color: colours.$white;
			text-align: center;
		}
	}
	&__stop {
		@include components.playbackButton;
		grid-area: stop-button;

		&-label {
			grid-area: stop-label;
			color: colours.$white;
			text-align: center;
		}
	}

	&__tempo {
		grid-area: tempo-input;
		margin: 1em;
		padding-right: 1em;

		border-radius: 3px;
		text-align: center;
		font-size: 1rem;
		appearance: textfield;
		width: 5em;

		&-label {
			grid-area: tempo-label;
			color: colours.$white;
			text-align: center;
		}

		&-bpm {
			grid-area: tempo-input;
			cursor: text;
			justify-self: flex-end;
			align-self: center;
			margin: 0.5em 2.25em 0;
			font-size: 0.625rem;
		}
	}
}
